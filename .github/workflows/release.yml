name: Release

on:
  workflow_dispatch:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set version env
      run: echo "CI_VERSION=$(cat server/res/version.txt | awk NF)" >> $GITHUB_ENV
    - name: Set date env
      run: echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
    - name: Prepare Docker Hub Readme
      run: cat docker-readme.md | sed "s/{{version}}/${CI_VERSION}/g" | sed "s/{{date}}/${TODAY}/g" > docker-readme-modified.md
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Log into docker.io registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: seatsurfing
        password: ${{ secrets.CI_REGISTRY_PASSWORD }}
    - name: Log into ghcr.io registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push booking ui
      uses: docker/build-push-action@v5
      with:
        build-args: CI_VERSION=${{ env.CI_VERSION }}
        context: ./
        file: Dockerfile.booking-ui
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/seatsurfing/booking-ui:${{ env.CI_VERSION }}
          ${{ env.REGISTRY }}/seatsurfing/booking-ui:latest
          docker.io/seatsurfing/booking-ui:${{ env.CI_VERSION }}
          docker.io/seatsurfing/booking-ui:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Build and push admin ui
      uses: docker/build-push-action@v5
      with:
        build-args: CI_VERSION=${{ env.CI_VERSION }}
        context: ./
        file: Dockerfile.admin-ui
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/seatsurfing/admin-ui:${{ env.CI_VERSION }}
          ${{ env.REGISTRY }}/seatsurfing/admin-ui:latest
          docker.io/seatsurfing/admin-ui:${{ env.CI_VERSION }}
          docker.io/seatsurfing/admin-ui:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/seatsurfing/backend:${{ env.CI_VERSION }}
          ${{ env.REGISTRY }}/seatsurfing/backend:latest
          docker.io/seatsurfing/backend:${{ env.CI_VERSION }}
          docker.io/seatsurfing/backend:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: seatsurfing
        password: ${{ secrets.CI_REGISTRY_PASSWORD }}
        repository: seatsurfing/backend
        readme-filepath: ./docker-readme-modified.md
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.CI_VERSION }}
        release_name: ${{ env.CI_VERSION }}
        draft: false
        prerelease: false